import tweepy
from autenticadores import google_api_auth
from random import choice
import gspread

# TODO remover (?)
def google_sshet():
    """
    FunÃ§Ã£o simples para retornar um objeto capaz de manipular as planilhas do Google Sheets.
    """
    session = google_api_auth()
    ggle_cred = gspread.Client(None, session)
    return ggle_cred

# TODO renomear esta funcao para cria_frase
def lista_frases(url, orgao):
    com_orgao = [
        f"ğŸ¤– O portal com dados pÃºblicos {url} do Ã³rgÃ£o {orgao} parece nÃ£o estar funcionando. Poderia me ajudar a checar?",
        f"ğŸ¤– Hum, parece que o site {url}, mantido pelo Ã³rgÃ£o {orgao}, estÃ¡ apresentando erro. Poderia dar uma olhadinha?",
        f"ğŸ¤– Poxa, tentei acessar {url} e nÃ£o consegui. Este site Ã© mantido pelo Ã³rgÃ£o {orgao}. VocÃª pode confirmar isso?",
        f"ğŸ¤– NÃ£o consigo acessar {url}, e eu sei que ele Ã© mantido pelo Ã³rgÃ£o {orgao}. VocÃª pode me ajudar a verificar?",
        f"ğŸ¤– Sabe o portal {url}, mantido pelo orgÃ£o {orgao}? Ele parece estar fora do ar. VocÃª pode confirmar?",
        f"ğŸ¤– Parece que {url} estÃ¡ apresentando probleminhas para ser acessado. AlguÃ©m pode avisar a(o) {orgao}?",
        f"ğŸ¤– Oi, parece que esse site {url} possui problemas de acesso. {orgao} estÃ¡ sabendo disso?",
        f"ğŸ¤– Portais da transparÃªncia sÃ£o um direito ao acesso Ã  informaÃ§Ã£o {orgao}, mas parece que {url} estÃ¡ fora do ar.",
        f"ğŸ¤– Opa {orgao}, parece que o site {url} nÃ£o estÃ¡ acessÃ­vel como deveria. O que estÃ¡ acontecendo?",
        f"ğŸ¤– Tentei acessar o site {url} e nÃ£o consegui. {orgao} estÃ¡ acontecendo algum problema com essa portal de transparÃªncia?",
    ]
    msg_orgao = choice(com_orgao)
    return msg_orgao

# TODO remover
def checar_timelines(twitter_hander, mastodon_handler, url, orgao):
    """
    Recupera os 10 Ãºltimos toots/tweets da conta do Mastodon/Twitter.
    Caso a URL nÃ£o esteja entre as Ãºltimas notificadas, Ã© feita a postagem.
    Feature necessÃ¡ria para nÃ£o floodar a timeline alheia caso um site fique offline por longos perÃ­odos de tempo.
    """

    mastodon_bot = mastodon_handler
    twitter_bot = twitter_hander
    
    timeline = mastodon_bot.timeline_home(limit=10)
    urls_postadas = [toot["content"] for toot in timeline]
    contem = any(url in toot for toot in urls_postadas)
    if not contem:
        mastodon_bot.toot(lista_frases(url=url, orgao=orgao))
        try:
            twitter_bot.update_status(status=lista_frases(url=url, orgao=orgao))
        except tweepy.TweepError as error:
            if error.api_code == 187:
                print('duplicate message')
            else:
                raise error
